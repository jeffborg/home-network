---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: frigate
  namespace: home-automation
spec:
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: frigate
      version: 7.1.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
  install: {}
  interval: 10m0s
  values:
    image:
      repository: blakeblackshear/frigate
      tag: 0.10.0-amd64
    nodeSelector:
      kubernetes.io/arch: amd64
    ingress:
      main:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: ca-issuer
          hajimari.io/enable: 'true'
          hajimari.io/icon: 'home-automation'
          hajimari.io/appName: 'Frigate'
          # hajimari.io/url
        tls:
          - hosts:
            - frigate.${BASE_DOMAIN}
            secretName: frigate-tls
        hosts:
          - host: frigate.${BASE_DOMAIN}
            paths:
              - path: /
    service:
      main:
        ports:
          rtmp:
            enabled: true
    env:
      TZ: Australia/Sydney
    envFrom:
      - secretRef:
          name: frigate-secrets
    podAnnotations:
      configmap.reloader.stakater.com/reload: "frigate-config"
    persistence:
      media:
        enabled: true
        mountPath: /media/frigate
        size: 100Gi
        accessMode: ReadWriteMany
        # existingClaim: frigate-media
      # video10:
      #   enabled: true
      #   type: hostPath
      #   hostPath: /dev/video10
      # video11:
      #   enabled: true
      #   type: hostPath
      #   hostPath: /dev/video11
      # video12:
      #   enabled: true
      #   type: hostPath
      #   hostPath: /dev/video12
      # video13:
      #   enabled: true
      #   type: hostPath
      #   hostPath: /dev/video13
      # video14:
      #   enabled: true
      #   type: hostPath
      #   hostPath: /dev/video14
      # video15:
      #   enabled: true
      #   type: hostPath
      #   hostPath: /dev/video15
      # video16:
      #   enabled: true
      #   type: hostPath
      #   hostPath: /dev/video16
    securityContext:
      privileged: true
      # capabilities:
      #   add:
      #     - CAP_SYS_ADMIN
    podSecurityContext:
      supplementalGroups:
        - 44
    config: |
      mqtt:
        host: mqtt-mosquitto
        topic_prefix: frigate
      detectors:
        cpu1:
          type: cpu
        cpu2:
          type: cpu
      cameras:
        front:
          motion:
            mask:
              - 1280,720,1280,677,947,678,950,720
              - 276,361,320,483,503,491,577,365,575,291,528,170,423,132,314,169
              - 0,315,0,686,190,627,384,538,425,364,409,206,412,100,372,0,190,0,95,0,0,3
              - 1280,61,1280,316,771,75
          zones:
            front_yard:
              coordinates: 0,720,1280,720,1280,441,765,159,0,360
            road:
              coordinates: 1,350,764,158,770,76,1280,52,1277,0,1,2
          ffmpeg:
            inputs:
              - path: rtsp://admin:{FRIGATE_CAMERA_PASSWORD}@192.168.58.113/Streaming/Channels/2
                roles:
                  - detect
                  - rtmp
              - path: rtsp://admin:{FRIGATE_CAMERA_PASSWORD}@192.168.58.113/Streaming/Channels/1
                roles:
                  - record
        garage:
          motion:
            mask:
              - 56,73,59,37,817,34,817,74
          ffmpeg:
            inputs:
              - path: http://192.168.58.114:8181/videostream.cgi?user=admin&pwd={FRIGATE_CAMERA2_PASSWORD}
                roles:
                  - record
                  - detect
                  - rtmp
            input_args:
              - -avoid_negative_ts
              - make_zero
              - -fflags
              - nobuffer
              - -flags
              - low_delay
              - -strict
              - experimental
              - -fflags
              - +genpts+discardcorrupt
              - -r
              - "20" # <---- adjust depending on your desired frame rate from the mjpeg image
              - -use_wallclock_as_timestamps
              - "1"
            output_args:
              record: -f segment -segment_time 10 -segment_format mp4 -reset_timestamps 1 -strftime 1 -vf format=nv12,hwupload -c:v h264_vaapi -an
              rtmp: -vf format=nv12,hwupload -c:v h264_vaapi -an -f flv
            # output_args:
            #   record: -f segment -segment_time 60 -segment_format mp4 -reset_timestamps 1 -strftime 1 -vf format=yuv420p -c:v libx264 -an
            #   clips: -f segment -segment_time 10 -segment_format mp4 -reset_timestamps 1 -strftime 1 -vf format=yuv420p -c:v libx264 -an
            #   rtmp: -vf format=yuv420p -c:v libx264 -an -f flv
            #  ffmpeg -vaapi_device /dev/dri/renderD128 -i 'http://192.168.58.114:8181/videostream.cgi?user=admin&pwd=ert741q'  -vf 'format=nv12,hwupload' -c:v h264_vaapi WORKS!
      snapshots:
        retain:
          default: 30
          objects:
            car: 2
      detect:
        stationary:
          interval: 0
          max_frames:
            default: 1000
      record:
        enabled: true
        retain:
          days: 1
        events:
          retain:
            default: 30
            objects:
              car: 2
            
        # events:
          # Optional: Enable event recording retention settings (default: shown below)
          # enabled: true
      objects:
        track:
          - person
          - cat
          - car
          - bicycle
          - motorcycle
        filters:
          person:
            min_score: 0.4
            threshold: 0.5
          cat:
            min_score: 0.4
            threshold: 0.5
          car:
            min_score: 0.4
            threshold: 0.5
          bicycle:
            min_score: 0.4
            threshold: 0.5
          motorcycle:
            min_score: 0.4
            threshold: 0.5
      motion:
        # Optional: The threshold passed to cv2.threshold to determine if a pixel is different enough to be counted as motion. (default: shown below)
        # Increasing this value will make motion detection less sensitive and decreasing it will make motion detection more sensitive.
        # The value should be between 1 and 255.
        threshold: 35
        # Optional: Minimum size in pixels in the resized motion image that counts as motion
        # Increasing this value will prevent smaller areas of motion from being detected. Decreasing will make motion detection more sensitive to smaller
        # moving objects. DEFAULT 100
        contour_area: 35
        # Optional: Alpha value passed to cv2.accumulateWeighted when averaging the motion delta across multiple frames (default: shown below)
        # Higher values mean the current frame impacts the delta a lot, and a single raindrop may register as motion.
        # Too low and a fast moving person wont be detected as motion.
        # delta_alpha: 0.2
        # Optional: Alpha value passed to cv2.accumulateWeighted when averaging frames to determine the background (default: shown below)
        # Higher values mean the current frame impacts the average a lot, and a new object will be averaged into the background faster.
        # Low values will cause things like moving shadows to be detected as motion for longer.
        # https://www.geeksforgeeks.org/background-subtraction-in-an-image-using-concept-of-running-average/
        # frame_alpha: 0.2
        # Optional: Height of the resized motion frame  (default: 1/6th of the original frame height)
        # This operates as an efficient blur alternative. Higher values will result in more granular motion detection at the expense of higher CPU usage.
        # Lower values result in less CPU, but small changes may not register as motion.
        # frame_height: 180
      logger:
        # Optional: default log level (default: shown below) (info)
        default: info
      ffmpeg:
        hwaccel_args:
          # - -init_hw_device
          # - qsv:hw,child_device_type=vaapi
          # - -hwaccel
          # - vaapi
          - -vaapi_device
          - /dev/dri/renderD128
          # - init_hw_device
          # - vaapi=intel:/dev/dri/renderD128        
          - -hwaccel_output_format 
          - yuv420p
          # - -c:v
          # - h264_v4l2m2m
          # - h264_mmal
