---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tesla-proxy
  namespace: home-automation
# note values documented here https://artifacthub.io/packages/helm/bjw-s/common/0.2.2
spec:
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 0.2.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    timeout: 5m
  interval: 10m0s
  values:
    nodeSelector:
      storage: longhorn
    addons:
      codeserver:
        enabled: false
        image:
          repository: codercom/code-server
          tag: 4.90.3
        workingDir: "/config"
        args:
          - --auth
          - "none"
          - --user-data-dir
          - "/config/.vscode"
          - --extensions-dir
          - "/config/.vscode"
        ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: ca-issuer
          tls:
            - hosts:
              - config.tesla-proxy.${BASE_DOMAIN}
              secretName: tesla-proxy-code-server-tls
          hosts:
            - host: config.tesla-proxy.${BASE_DOMAIN}
              paths:
                - path: /
        volumeMounts:
          - name: config
            mountPath: /config
    image:
      repository: iainbullock/tesla_http_proxy
      tag: "v1.0.5"
      pullPolicy: IfNotPresent
    strategy:
      type: Recreate
    service:
      main:
        ports:
          https:
            port: 443
            enabled: true
          http:
            port: 8099
            enabled: true
            primary: true
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: ca-issuer
        tls:
          - hosts:
            - tesla-proxy.${BASE_DOMAIN}
            secretName: tesla-proxy-tls
        hosts:
          - host: tesla-proxy.${BASE_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: 8099
    persistence:
      config:
        enabled: true
        storageClass: longhorn
        size: 1Gi
        subPath:
          - mountPath: /data
            path: .
          - path: share
            mountPath: /share
      secret-config:
        enabled: true
        type: secret
        name: tesla-command-proxy
        mountPath: /data/config.sh
        readOnly: true
        subPath: config
      nginx-config:
        enabled: true
        type: configMap
        name: tesla-proxy-nginx
        mountPath: "-"
        readOnly: true
        subPath: nginx.conf
    additionalContainers:
      nginx:
        image: "nginx:1.28.0-perl"
        imagePullPolicy: IfNotPresent
        ports:
          - name: nginx
            containerPort: 80
            protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 0
          failureThreshold: 3
          timeoutSeconds: 1
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 0
          failureThreshold: 3
          timeoutSeconds: 1
          periodSeconds: 10
        startupProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 0
          failureThreshold: 30
          timeoutSeconds: 1
          periodSeconds: 5
        volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
            readOnly: true
          - name: config
            mountPath: /share/nginx
            subPath: share/nginx
    configmap:
      nginx:
        enabled: true
        data:
          nginx.conf: |
            server {
                listen 80;
                listen [::]:80;
                server_name tesla.home; # Change to match your own FQDN
                root /share/nginx;
                # static public key for Tesla
                location /.well-known/appspecific/ {
                    try_files /com.tesla.3p.public-key.pem =404;
                }
                    # temporary Flask app for initial auth
                location / {
                    proxy_pass http://127.0.0.1:8099; # Change to hostname or IP of your Docker host
                }
            }
